
package TicTacToe;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DW_TicTacToePort", targetNamespace = "urn:DW_TicTacToe")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DWTicTacToePort {


    /**
     * Este metodo marca el tablero  de acuerdo al jugador (no se encarga de buscar cual marcar)
     * 
     * @param columna
     * @param jugador
     * @param fila
     */
    @WebMethod(action = "urn:DW_TicTacToe#tick")
    @Oneway
    @RequestWrapper(localName = "tick", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.Tick")
    public void tick(
        @WebParam(name = "fila", targetNamespace = "")
        int fila,
        @WebParam(name = "columna", targetNamespace = "")
        int columna,
        @WebParam(name = "jugador", targetNamespace = "")
        int jugador);

    /**
     * Metodo que busca ganar en el mismo turno (unicamente por la maquina).
     * 
     * @param jugador
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:DW_TicTacToe#searchWin")
    @WebResult(name = "searchWinResult", targetNamespace = "")
    @RequestWrapper(localName = "searchWin", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.SearchWin")
    @ResponseWrapper(localName = "searchWinResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.SearchWinResponse")
    public String searchWin(
        @WebParam(name = "jugador", targetNamespace = "")
        int jugador);

    /**
     * Metodo que busca ganar en el turno (unicamente por la maquina).
     * 
     * @param jugador
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:DW_TicTacToe#searchBlock")
    @WebResult(name = "searchBlockResult", targetNamespace = "")
    @RequestWrapper(localName = "searchBlock", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.SearchBlock")
    @ResponseWrapper(localName = "searchBlockResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.SearchBlockResponse")
    public String searchBlock(
        @WebParam(name = "jugador", targetNamespace = "")
        int jugador);

    /**
     * Metodo que busca la mejor posicion para marcar  en el turno (unicamente por la maquina).
     * 
     * @param jugador
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:DW_TicTacToe#searchTick")
    @WebResult(name = "searchTickResult", targetNamespace = "")
    @RequestWrapper(localName = "searchTick", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.SearchTick")
    @ResponseWrapper(localName = "searchTickResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.SearchTickResponse")
    public String searchTick(
        @WebParam(name = "jugador", targetNamespace = "")
        int jugador);

    /**
     * Metodo que busca la mejor posicion para marcar  en el turno (unicamente por la maquina).
     * 
     * @param jugador
     */
    @WebMethod(action = "urn:DW_TicTacToe#playComputer")
    @Oneway
    @RequestWrapper(localName = "playComputer", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.PlayComputer")
    public void playComputer(
        @WebParam(name = "jugador", targetNamespace = "")
        int jugador);

    /**
     * Metodo que busca la mejor posicion para marcar  en el turno (unicamente por la maquina).
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:DW_TicTacToe#getBoardStr")
    @WebResult(name = "getBoardStrResult", targetNamespace = "")
    @RequestWrapper(localName = "getBoardStr", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.GetBoardStr")
    @ResponseWrapper(localName = "getBoardStrResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.GetBoardStrResponse")
    public String getBoardStr();

    /**
     * Metodo que busca la mejor posicion para marcar  en el turno (unicamente por la maquina).
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:DW_TicTacToe#prueba")
    @WebResult(name = "pruebaResult", targetNamespace = "")
    @RequestWrapper(localName = "prueba", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.Prueba")
    @ResponseWrapper(localName = "pruebaResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.PruebaResponse")
    public String prueba();

    /**
     * Verdadero si el jugador gano, falso si aun no ha ganado.
     * 
     * @param jugador
     * @return
     *     returns boolean
     */
    @WebMethod(action = "urn:DW_TicTacToe#checkWin")
    @WebResult(name = "checkWinResult", targetNamespace = "")
    @RequestWrapper(localName = "checkWin", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.CheckWin")
    @ResponseWrapper(localName = "checkWinResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.CheckWinResponse")
    public boolean checkWin(
        @WebParam(name = "jugador", targetNamespace = "")
        int jugador);

    /**
     * Verdadero si esta lleno, falso si hay espacios.
     * 
     * @param jugador
     * @return
     *     returns boolean
     */
    @WebMethod(action = "urn:DW_TicTacToe#isFull")
    @WebResult(name = "isFullResult", targetNamespace = "")
    @RequestWrapper(localName = "isFull", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.IsFull")
    @ResponseWrapper(localName = "isFullResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.IsFullResponse")
    public boolean isFull(
        @WebParam(name = "jugador", targetNamespace = "")
        int jugador);

    /**
     * Metodo que busca la mejor posicion para marcar  en el turno (unicamente por la maquina).
     * 
     * @param jugador
     */
    @WebMethod(action = "urn:DW_TicTacToe#playComputerRand")
    @Oneway
    @RequestWrapper(localName = "playComputerRand", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.PlayComputerRand")
    public void playComputerRand(
        @WebParam(name = "jugador", targetNamespace = "")
        int jugador);

}
