
package TicTacToe;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DW_TicTacToePort", targetNamespace = "urn:DW_TicTacToe")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DWTicTacToePort {


    /**
     * This method resets the variables to play again
     * 
     */
    @WebMethod(action = "urn:DW_TicTacToe#playAgain")
    @Oneway
    @RequestWrapper(localName = "playAgain", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.PlayAgain")
    public void playAgain();

    /**
     * This method tick the board according to the player
     * 
     * @param column
     * @param row
     * @param player
     */
    @WebMethod(action = "urn:DW_TicTacToe#tick")
    @Oneway
    @RequestWrapper(localName = "tick", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.Tick")
    public void tick(
        @WebParam(name = "row", targetNamespace = "")
        int row,
        @WebParam(name = "column", targetNamespace = "")
        int column,
        @WebParam(name = "player", targetNamespace = "")
        int player);

    /**
     * This method returns the board in a strings
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:DW_TicTacToe#getBoardStr")
    @WebResult(name = "getBoardStrResult", targetNamespace = "")
    @RequestWrapper(localName = "getBoardStr", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.GetBoardStr")
    @ResponseWrapper(localName = "getBoardStrResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.GetBoardStrResponse")
    public String getBoardStr();

    /**
     * This method check if the player wins.
     * 
     * @param player
     * @return
     *     returns boolean
     */
    @WebMethod(action = "urn:DW_TicTacToe#checkWin")
    @WebResult(name = "checkWinResult", targetNamespace = "")
    @RequestWrapper(localName = "checkWin", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.CheckWin")
    @ResponseWrapper(localName = "checkWinResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.CheckWinResponse")
    public boolean checkWin(
        @WebParam(name = "player", targetNamespace = "")
        int player);

    /**
     * This method check if board is full.
     * 
     * @param player
     * @return
     *     returns boolean
     */
    @WebMethod(action = "urn:DW_TicTacToe#isFull")
    @WebResult(name = "isFullResult", targetNamespace = "")
    @RequestWrapper(localName = "isFull", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.IsFull")
    @ResponseWrapper(localName = "isFullResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.IsFullResponse")
    public boolean isFull(
        @WebParam(name = "player", targetNamespace = "")
        int player);

    /**
     * This method make the computer play a position random.
     * 
     * @param player
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:DW_TicTacToe#playComputerRand")
    @WebResult(name = "playComputerRandResult", targetNamespace = "")
    @RequestWrapper(localName = "playComputerRand", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.PlayComputerRand")
    @ResponseWrapper(localName = "playComputerRandResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.PlayComputerRandResponse")
    public String playComputerRand(
        @WebParam(name = "player", targetNamespace = "")
        int player);

    /**
     * This method add to the ranking a player with the time
     * 
     * @param name
     */
    @WebMethod(action = "urn:DW_TicTacToe#addToRanking")
    @Oneway
    @RequestWrapper(localName = "addToRanking", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.AddToRanking")
    public void addToRanking(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * This method returns the ranking in a string
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:DW_TicTacToe#getRanking")
    @WebResult(name = "getRankingResult", targetNamespace = "")
    @RequestWrapper(localName = "getRanking", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.GetRanking")
    @ResponseWrapper(localName = "getRankingResponse", targetNamespace = "urn:DW_TicTacToe", className = "TicTacToe.GetRankingResponse")
    public String getRanking();

}
